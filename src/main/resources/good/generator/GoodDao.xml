<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.GoodDao">
  <resultMap id="BaseResultMap" type="generator.Good">
    <id column="goodID" jdbcType="INTEGER" property="goodid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="expiry" jdbcType="INTEGER" property="expiry" />
    <result column="temperature" jdbcType="INTEGER" property="temperature" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="mass" jdbcType="INTEGER" property="mass" />
    <result column="packages" jdbcType="VARCHAR" property="packages" />
    <result column="length" jdbcType="INTEGER" property="length" />
    <result column="width" jdbcType="INTEGER" property="width" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
  </resultMap>
  <sql id="Base_Column_List">
    goodID, `name`, expiry, temperature, `type`, mass, packages, `length`, width, height, 
    unit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good
    where goodID = #{goodid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where goodID = #{goodid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="goodID" keyProperty="goodid" parameterType="generator.Good" useGeneratedKeys="true">
    insert into good (`name`, expiry, temperature, 
      `type`, mass, packages, 
      `length`, width, height, 
      unit)
    values (#{name,jdbcType=VARCHAR}, #{expiry,jdbcType=INTEGER}, #{temperature,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{mass,jdbcType=INTEGER}, #{packages,jdbcType=VARCHAR}, 
      #{length,jdbcType=INTEGER}, #{width,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="goodID" keyProperty="goodid" parameterType="generator.Good" useGeneratedKeys="true">
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="expiry != null">
        expiry,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="mass != null">
        mass,
      </if>
      <if test="packages != null">
        packages,
      </if>
      <if test="length != null">
        `length`,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="expiry != null">
        #{expiry,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="mass != null">
        #{mass,jdbcType=INTEGER},
      </if>
      <if test="packages != null">
        #{packages,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=INTEGER},
      </if>
      <if test="width != null">
        #{width,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="generator.Good">
    update good
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="expiry != null">
        expiry = #{expiry,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="mass != null">
        mass = #{mass,jdbcType=INTEGER},
      </if>
      <if test="packages != null">
        packages = #{packages,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        `length` = #{length,jdbcType=INTEGER},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where goodID = #{goodid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.Good">
    update good
    set `name` = #{name,jdbcType=VARCHAR},
      expiry = #{expiry,jdbcType=INTEGER},
      temperature = #{temperature,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      mass = #{mass,jdbcType=INTEGER},
      packages = #{packages,jdbcType=VARCHAR},
      `length` = #{length,jdbcType=INTEGER},
      width = #{width,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR}
    where goodID = #{goodid,jdbcType=INTEGER}
  </update>
</mapper>